============================
 Err Module for ``1-my_list.py``
============================


- test file for the module


==============================
            TESTS
==============================

Import module:

>>> MyList = __import__('1-my_list').MyList
      

>>> my_list = MyList([5, 6, 7, 8])
>>> print(my_list)  #doctest: +NORMALIZE_WHITESPACE
[5, 6, 7, 8]
>>> my_list.print_sorted()  #doctest: +NORMALIZE_WHITESPACE
    [5, 6, 7, 8]


>>> my_list1.print_sorted() #doctest: +NORMALIZE_WHITESPACE
    [1, 4, 6, 9]

>>> my_list2 = MyList([5, 8, 2, 0])
>>> print(my_list2) #doctest: +NORMALIZE_WHITESPACE
    [5, 8, 2, 0]
>>> my_list2.print_sorted()   #doctest: +NORMALIZE_WHITESPACE
    [0, 2, 5, 8]

 # int list: descending order
 >>> my_list1 = MyList([9, 6, 4, 1]) 
 >>> print(my_list1)  #doctest: +NORMALIZE_WHITESPACE
 [9, 6, 4, 1]
 >>> my_list1.print_sorted()  #doctest: +NORMALIZE_WHITESPACE
 [1, 4, 6, 9]

 # int list: mixed order
 >>> my_list2 = MyList([5, 8, 2, 0])
 >>> print(my_list2)  #doctest: +NORMALIZE_WHITESPACE
 [5, 8, 2, 0]
 >>> my_list2.print_sorted()  #doctest: +NORMALIZE_WHITESPACE
 [0, 2, 5, 8]


>>> print(__import__("1-my_list").MyList.__doc__) #doctest: +NORMALIZE_WHITESPACE
<BLANKLINE>
    inherits from `list`
<BLANKLINE>
    Public instance method:
    `def print_sorted(self):`
<BLANKLINE>
    Args:
    list
<BLANKLINE>
    Returns:
    prints to stdout list sorted by ascending order
<BLANKLINE>

>>> print(__import__("1-my_list").MyList.print_sorted.__doc__) #doctest: +NORMALIZE_WHITESPACE
<BLANKLINE>
    prints the list, but sorted (ascending sort)
<BLANKLINE>
